/* * JAVA COMMUNITY PROCESS * * J S R  9 4 * * Test Compatibility Kit * */package org.jcp.jsr94.tck;import org.junit.jupiter.api.Test;import javax.rules.RuleExecutionSetNotFoundException;/** * Test the javax.rules.RuleExecutionSetNotFoundException class. * <p> * <b>Performs the following tests:</b><br> * <ul> * <li>Basic API tests. {@link #testRuleExecutionSetNotFoundException} * <ul> * <li>Instance Creation * <li>Class Hierarchy * <li>Exception Wrapping * </ul> * </ul> * * @version 1.0 * @see javax.rules.RuleExecutionSetNotFoundException * @since JSR-94 1.0 */class RuleExecutionSetNotFoundExceptionTest {    /**     * Test the compliance for javax.rules.RuleExecutionSetNotFoundException.     *     * <p>     * <b>Description:</b><br>     * Create two instances of the RuleExecutionSetNotFoundException     * class. The first instance will be constructed with an additional     * message. The second instance will have its own message as well     * as wrap the first instance. The class hierarchy will be tested.     * The second exception will be thrown. The exception will be     * caught  and the test will verify whether the exception can     * successfully be unwrapped.     * The following tests will be performed.     * <ul>     * <li>Instance Creation     * <ul>     * <li>Fail: If RuleExecutionSetNotFoundException cannot be created     * by any of     * the JSR specified constructors.     * <li>Succeed: If the exception can successfully be created.     * </ul>     * <li>Class Hierarchy     * <ul>     * <li>Fail: If superclass is not a RuleExecutionException     * <li>Succeed: If the exception is instance of RuleExecutionException.     * </ul>     * <li>Exception Wrapping     * <ul>     * <li>Fail: If any other than the the original     * RuleExecutionSetNotFoundException is unwrapped.     * <li>Succeed: If exception can successfully be unwrapped.     * </ul>     * </ul>     */    @Test    void testRuleExecutionSetNotFoundException() {        RuleExecutionSetNotFoundException re1 = null;        RuleExecutionSetNotFoundException re2 = null;        try {            re1 = new RuleExecutionSetNotFoundException("jsr94-test-not-found-exception");            re2 = new RuleExecutionSetNotFoundException("jsr94-test-embedded-not-found-exception", re1);            // Throw it.            throw re2;        } catch (RuleExecutionSetNotFoundException ex) {            // Catch it.            Throwable t = ex.getCause();            // The cause of the exception should be re1.            assert t.equals(re1);            // The thrown exception should be re2.            assert ex.equals(re2);        } catch (Exception e) {            throw new IllegalStateException(e);        }    }}